generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              Int               @id @default(autoincrement())
  username        String
  password        String
  role            String
  created_at      DateTime          @default(now()) @db.Timestamptz(3)
  order_histories order_histories[]
  wishlist        wishlist[]
}

model products {
  id              Int               @id @default(autoincrement())
  name            String
  price           Int
  image           String
  rating          Int               @default(0)
  created_at      DateTime?         @default(now()) @db.Timetz(6)
  category        Int?              @default(1)
  order_histories order_histories[]
  promotions      promotions[]
  wishlist        wishlist[]
}

model wishlist {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  created_at DateTime @default(now()) @db.Timestamptz(3)
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])
}

model order_histories {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  review     String
  created_at DateTime  @default(now()) @db.Time(3)
  amount     Int?      @default(1)
  rating     Int?      @default(0)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Restrict)
}

model promotions {
  id         Int      @id(map: "promotion_pkey") @default(autoincrement())
  product_id Int
  discount   Int      @default(0)
  period     Json
  status     Boolean
  condition  Json?
  created_at DateTime @default(now()) @db.Timestamptz(3)
  name       String?
  products   products @relation(fields: [product_id], references: [id], map: "promotion_product_id_fkey")
}
